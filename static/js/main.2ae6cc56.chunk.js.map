{"version":3,"sources":["components/SearchBar.js","components/ImageCard.js","components/ImageList.js","components/App.js","index.js"],"names":["SearchBar","props","useState","searchTerm","setSearchTerm","id","onSubmit","e","preventDefault","className","htmlFor","type","placeholder","value","onChange","target","ImageCard","spans","setSpans","imgRef","useRef","React","createRef","image","description","urls","useEffect","current","addEventListener","getSpans","height","clientHeight","Math","ceil","style","gridRowEnd","ref","src","regular","alt","ImageList","images","map","key","bottomBoundaryRef","App","useReducer","state","action","term","termDispatch","concat","fetching","imgData","imgDispatch","page","pager","pagerDispatch","axios","get","params","query","per_page","headers","Authorization","then","data","results","catch","err","console","log","scrollObserver","useCallback","node","IntersectionObserver","entries","forEach","en","intersectionRatio","observe","ReactDOM","render","document","getElementById"],"mappings":"6SAgCeA,G,YA3BG,SAACC,GAAW,IAAD,EACSC,mBAAS,IADlB,mBACpBC,EADoB,KACRC,EADQ,KAM3B,OACE,yBAAKC,GAAG,aACN,0BAAMC,SANW,SAACC,GACpBA,EAAEC,iBACFP,EAAMK,SAASH,IAIiBM,UAAU,WACtC,yBAAKA,UAAU,SACb,6BACE,2BAAOC,QAAQ,IAAf,iBAGF,2BACED,UAAU,QACVE,KAAK,OACLC,YAAY,yBACZC,MAAOV,EACPW,SAAU,SAACP,GAAD,OAAOH,EAAcG,EAAEQ,OAAOF,eCCrCG,G,MAvBG,SAACf,GAAW,IAAD,EACDC,mBAAS,GADR,mBACpBe,EADoB,KACbC,EADa,KAGrBC,EAASC,iBAAOC,IAAMC,WAHD,EAIGrB,EAAMsB,MAA5BC,EAJmB,EAInBA,YAAaC,EAJM,EAINA,KAErBC,qBAAU,WACRP,EAAOQ,QAAQC,iBAAiB,OAAQC,MAG1C,IAAMA,EAAW,WACf,IAAMC,EAASX,EAAOQ,QAAQI,aACxBd,EAAQe,KAAKC,KAAKH,EAAS,IAAM,EACvCZ,EAASD,IAGX,OACE,yBAAKiB,MAAO,CAAEC,WAAW,QAAD,OAAUlB,KAChC,yBAAKmB,IAAKjB,EAAQkB,IAAKZ,EAAKa,QAASC,IAAKf,OCHjCgB,EAbG,SAACvC,GACjB,IAAMwC,EAASxC,EAAMwC,OAAOC,KAAI,SAACnB,GAC/B,OAAO,kBAAC,EAAD,CAAWoB,IAAKpB,EAAMlB,GAAIkB,MAAOA,OAG1C,OACE,yBAAKd,UAAU,cACZgC,EACD,yBAAKL,IAAKnC,EAAM2C,kBAAmBvC,GAAG,2BCgH7BwC,EArHH,WAKV,IALgB,EAoCaC,sBA/BT,SAACC,EAAOC,GAC1B,OAAQA,EAAOrC,MACb,IAAK,WACH,OAAO,2BAAKoC,GAAZ,IAAmBE,KAAMD,EAAOC,OAClC,QACE,OAAOF,KA0BwC,CACnDE,KAAM,KArCQ,mBAoCTA,EApCS,KAoCHC,EApCG,OAuCeJ,sBAzBZ,SAACC,EAAOC,GACzB,OAAQA,EAAOrC,MACb,IAAK,eACH,OAAO,2BAAKoC,GAAZ,IAAmBN,OAAQM,EAAMN,OAAOU,OAAOH,EAAOP,UACxD,IAAK,kBACH,OAAO,2BAAKM,GAAZ,IAAmBK,SAAUJ,EAAOI,WACtC,IAAK,iBACH,OAAO,2BAAKL,GAAZ,IAAmBN,OAAQO,EAAOP,SACpC,QACE,OAAOM,KAgByC,CACpDN,OAAQ,GACRW,UAAU,IAzCI,mBAuCTC,EAvCS,KAuCAC,EAvCA,OA2CeR,sBAhBX,SAACC,EAAOC,GAC1B,OAAQA,EAAOrC,MACb,IAAK,eACH,OAAO,2BAAKoC,GAAZ,IAAmBQ,KAAMR,EAAMQ,KAAO,IACxC,QACE,OAAOR,KAW0C,CAAEQ,KAAM,IA3C/C,mBA2CTC,EA3CS,KA2CFC,EA3CE,KAmEhB/B,qBAAU,WACR4B,EAAY,CAAE3C,KAAM,kBAAmByC,UAAU,IACjDM,IACGC,IAAI,yCAA0C,CAC7CC,OAAQ,CAAEC,MAAOZ,EAAKA,KAAMa,SAAU,GAAIP,KAAMC,EAAMD,MACtDQ,QAAS,CACPC,cACE,2DAGLC,MAAK,SAACC,GACLZ,EAAY,CAAE3C,KAAM,eAAgB8B,OAAQyB,EAAKA,KAAKC,UACtDb,EAAY,CAAE3C,KAAM,kBAAmByC,UAAU,OAElDgB,OAAM,SAACC,GACNf,EAAY,CAAE3C,KAAM,kBAAmByC,UAAU,IACjDkB,QAAQC,IAAI,kCAAmCF,QAElD,CAACb,EAAMD,OAEV,IAAIX,EAAoBxB,iBAAO,MACzBoD,EAAiBC,uBACrB,SAACC,GACC,IAAIC,sBAAqB,SAACC,GACxBA,EAAQC,SAAQ,SAACC,GACXA,EAAGC,kBAAoB,GACzBtB,EAAc,CAAE9C,KAAM,uBAGzBqE,QAAQN,KAEb,CAACjB,IAQH,OANA/B,qBAAU,WACJkB,EAAkBjB,SACpB6C,EAAe5B,EAAkBjB,WAElC,CAAC6C,EAAgB5B,IAGlB,yBAAKnC,UAAU,OACb,kBAAC,EAAD,CAAWH,SA/DQ,SAACH,GACtB+C,EAAa,CAAEvC,KAAM,WAAYsC,KAAM9C,IACvCmE,QAAQC,IAAItB,EAAKA,MACjBK,EAAY,CAAE3C,KAAM,kBAAmByC,UAAU,IACjDM,IACGC,IAAI,yCAA0C,CAC7CC,OAAQ,CAAEC,MAAO1D,EAAY2D,SAAU,IACvCC,QAAS,CACPC,cACE,2DAGLC,MAAK,SAACC,GACLZ,EAAY,CAAE3C,KAAM,iBAAkB8B,OAAQyB,EAAKA,KAAKC,UACxDb,EAAY,CAAE3C,KAAM,kBAAmByC,UAAU,OAElDgB,OAAM,SAACC,GACNf,EAAY,CAAE3C,KAAM,kBAAmByC,UAAU,IACjDkB,QAAQC,IAAI,kCAAmCF,SA8CjD,kBAAC,EAAD,CACE5B,OAAQY,EAAQZ,OAChBG,kBAAmBA,MCjH3BqC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.2ae6cc56.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport \"./App.css\";\r\nimport \"./SearchBar.css\";\r\n\r\nconst SearchBar = (props) => {\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const onFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    props.onSubmit(searchTerm);\r\n  };\r\n  return (\r\n    <div id=\"searchbar\">\r\n      <form onSubmit={onFormSubmit} className=\"ui form\">\r\n        <div className=\"field\">\r\n          <div>\r\n            <label htmlFor=\"\">Image Search</label>\r\n          </div>\r\n\r\n          <input\r\n            className=\"field\"\r\n            type=\"text\"\r\n            placeholder=\"Enter a term to search\"\r\n            value={searchTerm}\r\n            onChange={(e) => setSearchTerm(e.target.value)}\r\n          />\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\n\r\nconst ImageCard = (props) => {\r\n  const [spans, setSpans] = useState(0);\r\n\r\n  const imgRef = useRef(React.createRef);\r\n  const { description, urls } = props.image;\r\n\r\n  useEffect(() => {\r\n    imgRef.current.addEventListener(\"load\", getSpans);\r\n  });\r\n\r\n  const getSpans = () => {\r\n    const height = imgRef.current.clientHeight;\r\n    const spans = Math.ceil(height / 10) + 2;\r\n    setSpans(spans);\r\n  };\r\n\r\n  return (\r\n    <div style={{ gridRowEnd: `span ${spans}` }}>\r\n      <img ref={imgRef} src={urls.regular} alt={description} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageCard;\r\n","import React from \"react\";\r\nimport \"./ImageList.css\";\r\nimport ImageCard from \"./ImageCard\";\r\n\r\nconst ImageList = (props) => {\r\n  const images = props.images.map((image) => {\r\n    return <ImageCard key={image.id} image={image} />;\r\n  });\r\n\r\n  return (\r\n    <div className=\"image-list\">\r\n      {images}\r\n      <div ref={props.bottomBoundaryRef} id=\"page-bottom-boundary\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageList;\r\n","import React, { useEffect, useReducer, useCallback, useRef } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport SearchBar from \"./SearchBar\";\r\nimport ImageList from \"./ImageList\";\r\nimport \"./App.css\";\r\n\r\nconst App = () => {\r\n  // const [pics, setPics] = useState([]);\r\n  // const [reachedBtm, setReachedBtm] = useState(false);\r\n  // const [term, setTerm] = useState(\"\");\r\n  // const [page, setPage] = useState(1);\r\n  const termReducer = (state, action) => {\r\n    switch (action.type) {\r\n      case \"SET_TERM\":\r\n        return { ...state, term: action.term };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n\r\n  const imgReducer = (state, action) => {\r\n    switch (action.type) {\r\n      case \"STACK_IMAGES\":\r\n        return { ...state, images: state.images.concat(action.images) };\r\n      case \"FETCHING_IMAGES\":\r\n        return { ...state, fetching: action.fetching };\r\n      case \"REPLACE_IMAGES\":\r\n        return { ...state, images: action.images };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n\r\n  const pageReducer = (state, action) => {\r\n    switch (action.type) {\r\n      case \"ADVANCE_PAGE\":\r\n        return { ...state, page: state.page + 1 };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n\r\n  const [term, termDispatch] = useReducer(termReducer, {\r\n    term: \"\",\r\n  });\r\n  const [imgData, imgDispatch] = useReducer(imgReducer, {\r\n    images: [],\r\n    fetching: true,\r\n  });\r\n  const [pager, pagerDispatch] = useReducer(pageReducer, { page: 0 });\r\n\r\n  const onSearchSubmit = (searchTerm) => {\r\n    termDispatch({ type: \"SET_TERM\", term: searchTerm });\r\n    console.log(term.term);\r\n    imgDispatch({ type: \"FETCHING_IMAGES\", fetching: true });\r\n    axios\r\n      .get(\"https://api.unsplash.com/search/photos\", {\r\n        params: { query: searchTerm, per_page: 20 },\r\n        headers: {\r\n          Authorization:\r\n            \"Client-ID Nb8LsYcDEwp60Eb9OIJ6IoidWkYW3y3H0PjgrVWvzfM\",\r\n        },\r\n      })\r\n      .then((data) => {\r\n        imgDispatch({ type: \"REPLACE_IMAGES\", images: data.data.results });\r\n        imgDispatch({ type: \"FETCHING_IMAGES\", fetching: false });\r\n      })\r\n      .catch((err) => {\r\n        imgDispatch({ type: \"FETCHING_IMAGES\", fetching: false });\r\n        console.log(\"Error happened during fetching!\", err);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    imgDispatch({ type: \"FETCHING_IMAGES\", fetching: true });\r\n    axios\r\n      .get(\"https://api.unsplash.com/search/photos\", {\r\n        params: { query: term.term, per_page: 20, page: pager.page },\r\n        headers: {\r\n          Authorization:\r\n            \"Client-ID Nb8LsYcDEwp60Eb9OIJ6IoidWkYW3y3H0PjgrVWvzfM\",\r\n        },\r\n      })\r\n      .then((data) => {\r\n        imgDispatch({ type: \"STACK_IMAGES\", images: data.data.results });\r\n        imgDispatch({ type: \"FETCHING_IMAGES\", fetching: false });\r\n      })\r\n      .catch((err) => {\r\n        imgDispatch({ type: \"FETCHING_IMAGES\", fetching: false });\r\n        console.log(\"Error happened during fetching!\", err);\r\n      });\r\n  }, [pager.page]);\r\n\r\n  let bottomBoundaryRef = useRef(null);\r\n  const scrollObserver = useCallback(\r\n    (node) => {\r\n      new IntersectionObserver((entries) => {\r\n        entries.forEach((en) => {\r\n          if (en.intersectionRatio > 0) {\r\n            pagerDispatch({ type: \"ADVANCE_PAGE\" });\r\n          }\r\n        });\r\n      }).observe(node);\r\n    },\r\n    [pagerDispatch]\r\n  );\r\n  useEffect(() => {\r\n    if (bottomBoundaryRef.current) {\r\n      scrollObserver(bottomBoundaryRef.current);\r\n    }\r\n  }, [scrollObserver, bottomBoundaryRef]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <SearchBar onSubmit={onSearchSubmit} />\r\n      <ImageList\r\n        images={imgData.images}\r\n        bottomBoundaryRef={bottomBoundaryRef}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}